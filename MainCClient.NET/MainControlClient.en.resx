<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LedImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABs
        CQAAAk1TRnQBSQFMAgEBBgEAAbgBAAG4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wAvAAGCAdUBrwH/ATsB1AGUAf8BOgHSAZEB/wE7AdQBlAH/
        AYIB1QGvAf8sAAHwAdEBkwL/AcwBUwL/AcwBUwL/AcwBUwH/AfAB0QGTAf+oAAGCAdUBrwH/AT8B6QGq
        Af8BTQH/AewB/wFOAf8B8QH/AU0B/wHsAf8BPwHpAaoB/wGCAdUBrwH/JAAB8AHRAZMC/wHiAW8D/wHU
        A/8B3AP/AdQC/wHiAW8B/wHwAdEBkwH/pAABOwHUAZQB/wFMAf8B5AH/AUwB/wHkAf8BTAH/AeQB/wFM
        Af8B5AH/AUwB/wHkAf8BOwHUAZQB/yQAAf8BzgFVA/8BtgP/AbYD/wG2A/8BtgP/AbYC/wHOAVUB/6QA
        AToB0gGRAf8BhAH/AfgB/wFJAf8B1gH/AUkB/wHWAf8BSQH/AdYB/wGEAf8B+AH/AToB0gGRAf8kAAH/
        AcwBUwP/AcEC/wH8AZcC/wH8AZcC/wH8AZcD/wHBAv8BzAFTAf+kAAE6AdIBkQH/AcwD/wFrAf8B6gH/
        AWIB/wHjAf8BawH/AeoB/wHMA/8BOgHSAZEB/yQAAf8BzAFTA/8B5QP/AaAC/wH8AZcD/wGgA/8B5QL/
        AcwBUwH/pAABkwHmAcAB/wFRAe8BswH/AdsD/wHiA/8B2wP/AVEB7wGzAf8BkwHmAcAB/yQAAf8B4wGk
        Av8B4gFvA/8B5QP/AekD/wHlAv8B4AFsAv8B4wGkAf+oAAGTAeYBwAH/AToB0gGRAf8BOgHSAY8B/wE6
        AdIBkQH/AZMB5gHAAf8sAAH/AeMBpAL/AcwBUwL/AcwBUwL/AcwBUwL/AeMBpAH//wD/AP8A/wD/AP8A
        /wD/ALQAAxYBHgMjATMDIwEzAyMBMwMWAR4sAAMWAR4DIwEzAyMBMwMjATMDFgEeLAADFgEeAyMBMwMj
        ATMDIwEzAxYBHmgAAxYBHgNUAawBJQE8AcsB/wEkATsBygH/ASUBPAHLAf8DVAGsAxYBHiQAAxYBHgFT
        AlQBrAEAAYoBOwH/AQABiQE6Af8BAAGKATsB/wFTAlQBrAMWAR4kAAMWAR4CVAFTAawBtwGDAQoB/wG2
        AYIBCQH/AbcBgwEKAf8CVAFTAawDFgEeKAABtAG+Av8BkQGgAv8BkQGgAv8BkQGgAv8BtAG+Av8oAANU
        AawBMwFLAdkB/wFgAYgC/wFkAYwC/wFgAYgC/wEzAUsB2QH/A1QBrCQAAVMCVAGsAQABmwFNAf8BAAHO
        AZAB/wEAAdEBlAH/AQABzgGQAf8BAAGbAU0B/wFTAlQBrCQAAlQBUwGsAcUBkgEgAf8B7QHAAWUB/wHx
        AcQBawH/Ae0BwAFlAf8BxQGSASAB/wJUAVMBrCQAAbQBvgL/AZIBqAL/AacBvQL/AakBvwL/AacBvQL/
        AZIBqAL/AbQBvgL/JAABJgE8AcsB/wFQAW0C/wFRAW0C/wFQAWwB/QH/AVEBbQL/AVABbQL/ASYBPAHL
        Af8lAAGKATsB/wEAAccBiQH/AQAByAGKAf8BAAHGAYkB/wEAAcgBigH/AQABxwGJAf8BAAGKATsB/yQA
        AbcBhAELAf8B6gG0AU0B/wHpAbQBTQH/AegBswFMAf8B6QG0AU0B/wHqAbQBTQH/AbcBhAELAf8kAAGR
        AaAC/wGdAbYC/wGdAbYC/wGdAbYC/wGdAbYC/wGdAbYC/wGRAaAC/yQAASQBOwHLAf8BXgGIAv8BPgFe
        AfsB/wE+AV4B+gH/AT4BXgH7Af8BXgGIAv8BJAE7AcsB/yUAAYkBOQH/ARYBzwGZAf8BAAHAAXAB/wEA
        Ab4BbwH/AQABwAFwAf8BFgHPAZkB/wEAAYkBOQH/JAABtwGCAQoB/wHrAbkBVQH/AeMBpgEyAf8B4wGm
        ATIB/wHjAaYBMgH/AesBuQFVAf8BtwGCAQoB/yQAAZEBoAL/AaUBvQL/AZIBrwL/AZIBrwL/AZIBrwL/
        AaUBvQL/AZEBoAL/JAABJAE7AcwB/wGQAaUB/QH/AUsBagH6Af8BRgFkAfkB/wFLAWoB+gH/AZABpQH9
        Af8BJAE7AcwB/yUAAYoBOgH/AVcB2gG0Af8BDwHGAY4B/wEHAcMBiAH/AQ8BxgGOAf8BVwHaAbQB/wEA
        AYoBOgH/JAABtwGDAQoB/wHuAcYBhAH/AeUBqgE6Af8B4gGmATIB/wHlAaoBOgH/Ae4BxgGEAf8BtwGD
        AQoB/yQAAZEBoAL/AbsBzgL/AZkBtQL/AZcBsgL/AZkBtQL/AbsBzgL/AZEBoAL/JAADTwGXATYBTgHb
        Af8BkAGmAfwB/wGVAawC/wGQAaYB/AH/ATUBTgHbAf8DTwGXJAABTgJPAZcBAQGfAVQB/wFlAdoBtwH/
        AWsB3gG9Af8BZQHaAbcB/wEBAZ8BVAH/AU4CTwGXJAACTwFOAZcBxgGSAR8B/wHsAcQBggH/Ae8ByAGG
        Af8B7AHEAYIB/wHGAZEBHQH/Ak8BTgGXJAABvQHHAv8BlAGqAv8BugHOAv8BvAHRAv8BugHOAv8BkwGq
        Av8BvQHHAv8oAANPAZcBIwE6AcwB/wEiATkBywH/ASMBOgHMAf8DTwGXLAABTgJPAZcBAAGKATkB/wEA
        AYkBNwH/AQABigE5Af8BTgJPAZcsAAJPAU4BlwG3AYMBCgH/AbYBggEIAf8BtwGDAQoB/wJPAU4BlywA
        Ab0BxwL/AZEBoAL/AZEBoAL/AZEBoAL/Ab0BxwL//wD/AP8A/wAYAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ASADAAEBAQABAQYAAQEWAAP/AQAE/wQABP8EAAT/BAAE/wQABP8EAAH8AR8B/AEfBAAB+AEPAfgBDwQA
        AfgBDwH4AQ8EAAH4AQ8B+AEPBAAB+AEPAfgBDwQAAfgBDwH4AQ8EAAH8AR8B/AEfBAAE/wQABP8EAAT/
        BAAE/wQAIP8B/AEfAfwBHwH8AR8C/wH4AQ8B+AEPAfgBDwH8AR8B+AEPAfgBDwH4AQ8B+AEPAfgBDwH4
        AQ8B+AEPAfgBDwH4AQ8B+AEPAfgBDwH4AQ8B+AEPAfgBDwH4AQ8B+AEPAfgBDwH4AQ8B+AEPAfgBDwH8
        AR8B/AEfAfwBHwH8AR8g/ws=
</value>
  </data>
  <data name="Plan_paused" xml:space="preserve">
    <value>Plan paused</value>
  </data>
</root>